clear all;
close all;

% ----------------------------- Model Training ----------------------------
% Required Parameters:
dataPath = ''; % Path to image data
POIPath = ''; % Path to POI image data
lambda = 0.1; % Regularization intensity coefficient

% Optional Parameters:
% Data loading related parameters:
trainIdxRange = 1:8; % Training set patch sampling index range
valIdxRange = 9:10; % Validation set patch sampling index range

% Model saving related parameters:
modelSavePath = '.\'; % Path to save the model

% Preprocessing related parameters:
upsamplRatio = [1.5 1.5 1]; % Upsampling factor
interpMethod = 'spline'; % Interpolation method, options: 'spline', 'linear', 'nearest', 'cubic'

% Model structure parameters:
encoderDepth = 2; % Depth of the U-net encoder (total depth approximately doubled)

% Model training parameters:
patchSize = [256 256]; % Size of patches
trainPatchNum = 512; % Number of training set patches
valPatchNum = 64; % Number of validation set patches
learningRate = 1e-3; % Learning rate
minLR = 1e-4; % Lower limit for learning rate decay
miniBatchSize = 8; % Batch size per iteration
maxEpochs = 1000; % Maximum number of training epochs
valFreq = 20; % Validation frequency (validate every valFreq batches)
maxPatience = 20; % Early stopping patience (stop training if validation loss does not decrease for this many epochs)
learnBG = true; % Whether to learn background
verbose = true; % Display processing as images
useGPU = true; % Use GPU

% Bayesian estimation optimal threshold search parameters:
useParallel = true; % Use parallel computation
parNum = 6; % Number of parallel pool workers
patchNumForThreshSearch = 512; % Number of samples for optimal segmentation threshold search

DEPAFTrain(dataPath, POIPath, lambda, ...
    'trainIdxRange', trainIdxRange, ...
    'valIdxRange', valIdxRange, ...
    'upsamplRatio', upsamplRatio, ...
    'interpMethod', interpMethod, ...
    'patchSize', patchSize, ...
    'trainPatchNum', trainPatchNum, ...
    'valPatchNum', valPatchNum, ...
    'encoderDepth', encoderDepth, ...
    'learningRate', learningRate, ...
    'minLR', minLR, ...
    'miniBatchSize', miniBatchSize, ...
    'maxEpochs', maxEpochs, ...
    'valFreq', valFreq, ...
    'maxPatience', maxPatience, ...
    'learnBG', learnBG, ...
    'verbose', verbose, ...
    'useGPU', useGPU, ...
    'useParallel', useParallel, ...
    'parNum', parNum, ...
    'patchNumForThreshSearch', patchNumForThreshSearch, ...
    'modelSavePath', modelSavePath);

% ---------------------------- Model Prediction ---------------------------
% Required Parameters:
modelPath = ''; % Path to prediction model
dataPath = ''; % Path to prediction data

% Optional Parameters:
batchSize = 64; % Batch size for a single prediction
patchSize = [64 64]; % Patch size for prediction (must be a power of 2)
patchStride = [32 32]; % Patch stride for prediction
resSavePath = '.\'; % Path to save prediction results
outputISyn = false; % Output noiseless synthetic images
outputBG = false; % Output background images
useGPU = true; % Use GPU

DEPAFPred(modelPath, dataPath, ...
    'batchSize', batchSize, ...
    'patchSize', patchSize, ...
    'patchStride', patchStride, ...
    'resSavePath', resSavePath, ...
    'outputISyn', outputISyn, ...
    'outputBG', outputBG, ...
    'useGPU', useGPU);